version: 2

settings:
  gas_price: "fast"
  chain: any
  services:
    pfs:
      url: https://pfs-goerli.services-dev.raiden.network
      #url: http://localhost:6000
    udc:
      enable: true
      token:
        deposit: true

token:

nodes:
  mode: managed
  count: 3

  default_options:
    gas-price: fast
    environment-type: development
    routing-mode: pfs
    pathfinding-max-paths: 5
    pathfinding-max-fee: 10

# Leave network when one of the nodes is down
scenario:
  serial:
    tasks:
      - parallel:
          tasks:
            # Open Channels
            - open_channel: {from: 2, to: 0, total_deposit: 10}
            - open_channel: {from: 2, to: 1, total_deposit: 10}
            - open_channel: {from: 0, to: 1, total_deposit: 10}
      - parallel:
          # Transfer from node 2 to other nodes in the network
          tasks:
            - transfer: {from: 2, to: 0, amount: 1}
            - transfer: {from: 2, to: 1, amount: 1}
      - wait: 2
      - parallel:
          tasks:
            # Assert Balances
            - assert: {from: 0, to: 1, total_deposit: 10, balance: 10,  state: "opened"}
            - assert: {from: 0, to: 2, total_deposit: 0, balance: 1, state: "opened"}
            - assert: {from: 2, to: 0, total_deposit: 10, balance: 9, state: "opened"}
            - assert: {from: 1, to: 2, total_deposit: 0, balance: 1,  state: "opened"}
            - assert: {from: 2, to: 1, total_deposit: 10, balance: 9,  state: "opened"}
      - stop_node: 1
      - leave_network: {from: 2}
      - parallel:
          tasks:
            # Check that the channels with node 2 are closed
            - assert: {from: 1, to: 0, total_deposit: 10, balance: 0,  state: "opened"}
            - assert: {from: 2, to: 0, expected_http_status: 404}
            - assert: {from: 2, to: 1, expected_http_status: 404}
