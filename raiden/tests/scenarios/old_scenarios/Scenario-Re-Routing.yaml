version: 2

settings:
  gas_price: "fast"
  chain: any
  services:
    pfs:
      url: https://pfs-goerli.services-dev.raiden.network
      #url: http://localhost:6000
    udc:
      enable: true
      token:
        deposit: true

token:

nodes:
  mode: managed
  count: 7

  default_options:
    gas-price: fast
    environment-type: development
    routing-mode: pfs
    pathfinding-max-paths: 5
    pathfinding-max-fee: 10

scenario:
  serial:
    tasks:
      - parallel:
          name: "Open channels"
          tasks:
            - open_channel: {from: 0, to: 1, total_deposit: 10, settle_timeout: 50}
            - open_channel: {from: 1, to: 2, total_deposit: 10, settle_timeout: 50}
            - open_channel: {from: 1, to: 3, total_deposit: 10, settle_timeout: 50}
            - open_channel: {from: 3, to: 4, total_deposit: 10, settle_timeout: 50}
            - open_channel: {from: 4, to: 5, total_deposit: 10, settle_timeout: 50}
            - open_channel: {from: 5, to: 6, total_deposit: 10, settle_timeout: 50}
            - open_channel: {from: 2, to: 6, total_deposit: 10, settle_timeout: 50}

      - serial:
          name: "Send tokens to Node 5 and kill it "
          tasks:
          - transfer: {from: 2, to: 6, amount: 10, expected_http_status: 200}
          - transfer: {from: 0, to: 6, amount: 3, expected_http_status: 200} ## Routing thinks the path would be over node 2 (shortest)
          - wait: 10
          - assert: {from: 1, to: 2, balance: 10, state: "opened"} ## this should stay the same, since there must be a refund transfer
