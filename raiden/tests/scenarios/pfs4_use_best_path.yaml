version: 2

settings:
  gas_price: "fast"
  chain: any
  services:
    pfs:
      url: https://pfs-goerli-with-fees.services-dev.raiden.network
    udc:
      enable: true
      token:
        deposit: true

token:

nodes:
  mode: managed
  count: 5
  raiden_version: local

  default_options:
    gas-price: fast
    environment-type: development
    routing-mode: pfs
    pathfinding-max-paths: 1
    pathfinding-max-fee: 100

## This is the PFS4 scenario. It creates a network with topology 0 <-> 1 <-> 2 <-> 3 and 0 <-> 4 <-> 2
## and checks whether the best path is the one used for the payment. 
## Note that `max-paths` is set to 1 path.

scenario:
  serial:
    tasks:
      - parallel:
          name: "Open channels"
          tasks:
            - open_channel: {from: 0, to: 1, total_deposit: 1000}
            - open_channel: {from: 1, to: 2, total_deposit: 1000}
            - open_channel: {from: 2, to: 3, total_deposit: 1000}
            # Setup alternative (best) path
            - open_channel: {from: 0, to: 4, total_deposit: 1000}
            - open_channel: {from: 4, to: 3, total_deposit: 1000}
      - parallel:
          name: "Deposit in the other directions"
          tasks:
            - deposit: {from: 1, to: 0, total_deposit: 1000}
            - deposit: {from: 2, to: 1, total_deposit: 1000}
            - deposit: {from: 3, to: 2, total_deposit: 1000}
            # Setup alternative (best) path
            - deposit: {from: 4, to: 0, total_deposit: 1000}
            - deposit: {from: 3, to: 4, total_deposit: 1000}
      - serial:
          name: "Test providing routes"
          tasks:
            # Check that a payment goes through
            - transfer: {from: 0, to: 3, amount: 10, expected_http_status: 200}

            # Check that IOU is created
            - assert_pfs_iou: {source: 3, amount: 100}

            ## Check that the paths are indeed the expected ones
            - assert_pfs_history:
                source: 0
                request_count: 1
                target: 3
                routes_count: 1
                expected_routes:
                  - [0, 4, 3]
